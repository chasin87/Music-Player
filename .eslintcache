[{"/Users/Yasin/Code/portfolio/music-player/music-player/src/index.js":"1","/Users/Yasin/Code/portfolio/music-player/music-player/src/reportWebVitals.js":"2","/Users/Yasin/Code/portfolio/music-player/music-player/src/App.js":"3","/Users/Yasin/Code/portfolio/music-player/music-player/src/components/Player.js":"4","/Users/Yasin/Code/portfolio/music-player/music-player/src/components/Song.js":"5","/Users/Yasin/Code/portfolio/music-player/music-player/src/components/Library.js":"6","/Users/Yasin/Code/portfolio/music-player/music-player/src/components/LibrarySong.js":"7","/Users/Yasin/Code/portfolio/music-player/music-player/src/components/Nav.js":"8","/Users/Yasin/Code/portfolio/music-player/music-player/src/data.js":"9"},{"size":478,"mtime":1608641658938,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1608640513872,"results":"12","hashOfConfig":"11"},{"size":2362,"mtime":1608846157118,"results":"13","hashOfConfig":"11"},{"size":3225,"mtime":1608845015998,"results":"14","hashOfConfig":"11"},{"size":284,"mtime":1608653689043,"results":"15","hashOfConfig":"11"},{"size":699,"mtime":1608725113230,"results":"16","hashOfConfig":"11"},{"size":948,"mtime":1608844796753,"results":"17","hashOfConfig":"11"},{"size":431,"mtime":1608724920049,"results":"18","hashOfConfig":"11"},{"size":2460,"mtime":1608816005005,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"c6r4he",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/Users/Yasin/Code/portfolio/music-player/music-player/src/index.js",[],["40","41"],"/Users/Yasin/Code/portfolio/music-player/music-player/src/reportWebVitals.js",[],"/Users/Yasin/Code/portfolio/music-player/music-player/src/App.js",[],"/Users/Yasin/Code/portfolio/music-player/music-player/src/components/Player.js",["42"],"import React, { useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faPause,\n  faAngleLeft,\n  faAngleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  songInfo,\n  setSongInfo,\n  songs,\n  setCurrentSong,\n  setSongs,\n}) => {\n  //useEffect\n  useEffect(() => {\n    const newSongs = songs.map((song) => {\n      if (song.id === currentSong.id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n  }, [currentSong]);\n\n  //Event Handlers\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n\n  const dragHandler = (e) => {\n    console.log(e.target.value);\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const skipTrackHandler = async (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    if (direction === \"skip-forward\") {\n      await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    } else {\n      if (direction === \"skip-back\") {\n        if ((currentIndex - 1) % songs.length === -1) {\n          setCurrentSong(songs[songs.length - 1]);\n          if (isPlaying) audioRef.current.play();\n          return;\n        }\n      }\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n    if (isPlaying) audioRef.current.play();\n  };\n\n  //add the styles\n  const trackAnim = {\n    transform: `translateX(${songInfo.animationPercentage}%)`,\n  };\n\n  const trackColors = {\n    background: `linear-gradient(to right, ${currentSong.color[0]},${currentSong.color[1]})`,\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <div style={trackColors} className=\"track\">\n          <input\n            type=\"range\"\n            min={0}\n            max={songInfo.duration || 0}\n            value={songInfo.currentTime}\n            onChange={dragHandler}\n          />\n          <div style={trackAnim} className=\"animate-track\"></div>\n        </div>\n\n        <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","/Users/Yasin/Code/portfolio/music-player/music-player/src/components/Song.js",[],"/Users/Yasin/Code/portfolio/music-player/music-player/src/components/Library.js",[],"/Users/Yasin/Code/portfolio/music-player/music-player/src/components/LibrarySong.js",[],"/Users/Yasin/Code/portfolio/music-player/music-player/src/components/Nav.js",[],"/Users/Yasin/Code/portfolio/music-player/music-player/src/data.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":37,"column":6,"nodeType":"49","endLine":37,"endColumn":19,"suggestions":"50"},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'setSongs' and 'songs'. Either include them or remove the dependency array. If 'setSongs' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["53"],"no-global-assign","no-unsafe-negation",{"desc":"54","fix":"55"},"Update the dependencies array to be: [currentSong, setSongs, songs]",{"range":"56","text":"57"},[682,695],"[currentSong, setSongs, songs]"]